<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="11" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-22T17:56:23 IST" name="Loan Departmnet" finished-at="2020-05-22T17:56:23 IST" duration-ms="68">
    <groups>
      <group name="Smoke">
        <method signature="Day4.WebLoginHomeLoan(java.lang.String)[pri:0, instance:Section18.Day4@6b4a4e18]" name="WebLoginHomeLoan" class="Section18.Day4"/>
        <method signature="Day2.pLoan()[pri:0, instance:Section18.Day2@78dd667e]" name="pLoan" class="Section18.Day2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2020-05-22T17:56:23 IST" name="Car Loan" finished-at="2020-05-22T17:56:23 IST" duration-ms="60">
      <class name="Section18.Day3">
        <test-method is-config="true" signature="MobileSignInCarLoan()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="MobileSignInCarLoan" finished-at="2020-05-22T17:56:23 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignInCarLoan -->
        <test-method is-config="true" signature="beforeclassMethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="beforeclassMethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclassMethod -->
        <test-method is-config="true" signature="BeforeEverymethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="BeforeEverymethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEverymethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2020-05-22T17:56:23 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="AfterEveryMethodmethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="AfterEveryMethodmethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethodmethod -->
        <test-method is-config="true" signature="BeforeEverymethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="BeforeEverymethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEverymethod -->
        <test-method signature="MobileLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2020-05-22T17:56:23 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="MobileLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="MobileLoginCarLoan" data-provider="getData" finished-at="2020-05-22T17:56:23 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="BeforeEverymethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="BeforeEverymethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEverymethod -->
        <test-method is-config="true" signature="AfterEveryMethodmethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="AfterEveryMethodmethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethodmethod -->
        <test-method is-config="true" signature="AfterclassMethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="AfterclassMethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterclassMethod -->
        <test-method is-config="true" signature="AfterEveryMethodmethod()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="AfterEveryMethodmethod" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethodmethod -->
        <test-method is-config="true" signature="MobileSignOutCarLoan()[pri:0, instance:Section18.Day3@1a04f701]" started-at="2020-05-22T17:56:23 IST" name="MobileSignOutCarLoan" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
      </class> <!-- Section18.Day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2020-05-22T17:56:23 IST" name="Personal Loan" finished-at="2020-05-22T17:56:23 IST" duration-ms="68">
      <class name="Section18.Day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:Section18.Day2@78dd667e]" started-at="2020-05-22T17:56:23 IST" name="prerequisite" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="pLoan()[pri:0, instance:Section18.Day2@78dd667e]" started-at="2020-05-22T17:56:23 IST" name="pLoan" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pLoan -->
        <test-method is-config="true" signature="postrequisite()[pri:0, instance:Section18.Day2@78dd667e]" started-at="2020-05-22T17:56:23 IST" name="postrequisite" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postrequisite -->
      </class> <!-- Section18.Day2 -->
      <class name="Section18.Day1TestNG">
        <test-method signature="demo()[pri:0, instance:Section18.Day1TestNG@78b729e6]" started-at="2020-05-22T17:56:23 IST" name="demo" finished-at="2020-05-22T17:56:23 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:968)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at Section18.Day1TestNG.demo(Day1TestNG.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:830)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- Section18.Day1TestNG -->
      <class name="Section18.Day4">
        <test-method signature="WebLoginHomeLoan(java.lang.String)[pri:0, instance:Section18.Day4@6b4a4e18]" started-at="2020-05-22T17:56:23 IST" name="WebLoginHomeLoan" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:Section18.Day4@6b4a4e18]" started-at="2020-05-22T17:56:23 IST" name="LoginAPIHomeLoan" finished-at="2020-05-22T17:56:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:Section18.Day4@6b4a4e18]" started-at="2020-05-22T17:56:23 IST" name="MobileLoginHomeLoan" finished-at="2020-05-22T17:56:23 IST" depends-on-methods="Section18.Day4.WebLoginHomeLoan" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
      </class> <!-- Section18.Day4 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Departmnet -->
</testng-results>
